swagger: '2.0'
info:
  title: Library API
  description: A demo api for library app.
  version: 0.0.1

paths:
  /api/book:
    get:
      tags:
        - Book
      summary: Gets all books registred in the system.
      produces:
        - application/json
      responses:
        200:
          description: Succesfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/book_with_id'
    post:
      tags:
        - Book
      summary: Create a book
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/book'
      responses:
        200:
          description: Succesful operation
          schema:
            $ref: '#/definitions/resource_id'
        400:
          description: Validation error
          schema:
            type: string


  /api/book/{book_id}:
    get:
      tags:
        - Book
      summary: Return single book by id.
      parameters:
        - in: path
          name: book_id
          type: integer
          required: true
          minimum: 1
      responses:
        200:
          description: Succesfull operation
          schema:
            $ref: '#/definitions/book_with_id'
        404:
          description: Resource not found
        403:
          description: Validation error
    put:
      tags:
        - Book
      summary: Update book
      parameters:
        - in: path
          name: book_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/book'
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error
    delete:
      tags:
        - Book
      summary: Remove book by id.
      parameters:
        - in: path
          name: book_id
          required: true
          type: integer
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error

  /api/user:
    get:
      tags:
        - User
      summary: Gets all users registred in the system.
      responses:
        200:
          description: Succesfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/user_with_id'
    post:
      tags:
        - User
      summary: Create a user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/user_with_pwd'
      responses:
        200:
          description: Succesfull operation
          schema:
            $ref: '#/definitions/resource_id'
        403:
          description: Validation error
  /api/user/{user_id}:
    get:
      tags:
        - User
      summary: Return single user by id.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
      responses:
        200:
          description: Succesfull operation
          schema:
            $ref: '#/definitions/user_with_id'
        404:
          description: Resource not found
        403:
          description: Validation error
    put:
      tags:
        - User
      summary: Update user
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error
    delete:
      tags:
        - User
      summary: Remove user by id.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error

  /api/user/{user_id}/orders/:
    get:
      tags:
        - Order
      summary: Get orders made by user.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
      responses:
        200:
          description: Succesfull operation
          schema:
            type: array
            items:
              $ref: '#/definitions/order_with_id'
    post:
      tags:
        - Order
      summary: Create a order for user.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/order'
      responses:
        200:
          description: Succesfull operation
          schema:
            $ref: '#/definitions/resource_id'
        403:
          description: Validation error
  /api/user/{user_id}/orders/{order_id}:
    get:
      tags:
        - Order
      summary: Return single order for user by id.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: order_id
          required: true
          type: integer
      responses:
        200:
          description: Succesfull operation
          schema:
            $ref: '#/definitions/order_with_id'
        404:
          description: Resource not found
        403:
          description: Validation error
    put:
      tags:
        - Order
      summary: Update order
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: order_id
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/order'
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error
    delete:
      tags:
        - Order
      summary: Remove order for user by id.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: path
          name: order_id
          required: true
          type: integer
      responses:
        204:
          description: Succesfull operation
        404:
          description: Resource not found
        403:
          description: Validation error


definitions:
  book:
    type: object
    properties:
      title:
        type: string
        minLength: 1
        maxLength: 50
      author_name:
        type: string
        minLength: 1
        maxLength: 50
      author_surname:
        type: string
        minLength: 1
        maxLength: 50
      publisher:
        type: string
        minLength: 1
        maxLength: 50
      year_published:
        type: string
        format: date
        pattern: '^\d{4}-\d{1,2}-\d{1,2}$'
      amount:
        type: integer
        minimum: 1
        maximum: 500

    required:
      - title
      - author_name
      - author_surname
      - publisher
      - year_published
      - amount
  book_with_id:
    allOf:     # Combines the BasicErrorModel and the inline model
      - $ref: '#/definitions/book'
      - type: object
        properties:
          book_id:
            type: integer
            format: int64
        required:
          - book_id

  user:
    type: "object"
    properties:
      username:
        type: string
        minLength: 1
        maxLength: 50
      firstName:
        type: string
        minLength: 1
        maxLength: 50
      lastName:
        type: string
        minLength: 1
        maxLength: 50
      email:
        type: string
        minLength: 1
        maxLength: 50
        format: email
        pattern: '^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$'
    required:
      - username
      - firstName
      - lastName
      - email
  user_with_id:
    allOf:
      - $ref: '#/definitions/user'
      - type: object
        properties:
          user_id:
            type: "integer"
            format: "int64"
        required:
          - user_id
  user_with_pwd:
    allOf:
      - $ref: '#/definitions/user'
      - type: object
        properties:
          password:
            type: string
            minLength: 8
            maxLength: 100
        required:
          - password
  order:
    type: "object"
    properties:
      book_id:
        type: "integer"
        format: "int64"
        minimum: 1
      return_date:
        type: string
        format: date
        pattern: '^\d{4}-\d{1,2}-\d{1,2}$'
      status:
        type: string
        description: "Order Status"
        enum:
          - "active"
          - "returned"
    required:
      - book_id
      - return_date
      - status

  order_with_id:
    allOf:
      - $ref: '#/definitions/order'
      - type: object
        properties:
          order_id:
            type: integer
            format: int64
        required:
          - order_id

  resource_id:
    type: object
    properties:
      id:
        type: integer
    required:
      - id